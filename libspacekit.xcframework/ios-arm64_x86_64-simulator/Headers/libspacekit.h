/* Generated with cbindgen:0.19.0 */

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

/**
 * The planets of our solar system
 */
typedef enum Planet {
    Mercury,
    Venus,
    Earth,
    Mars,
    Jupiter,
    Saturn,
    Uranus,
    Neptune,
} Planet;

/**
 * A number representing a day on the Julian calendar
 */
typedef double JulianDay;

typedef struct Coordinates {
    /**
     * Heliocentric longitude in radians
     */
    double longitude;
    /**
     * Heliocentric latitude in radians
     */
    double latitude;
    /**
     * Heliocentric radius vector in AU
     */
    double radius_vector;
} Coordinates;

typedef struct PhotoInfo {
    /**
     * Photo title
     */
    const char *title;
    /**
     * Photo explanation
     */
    const char *explanation;
    /**
     * Photo URL
     */
    const char *url;
    /**
     * HD Photo URL
     */
    const char *hd_url;
} PhotoInfo;

/**
 * A callback function for asynchronously fetching the NASA astronomy photo of the day
 */
typedef void (*PhotoCallback)(struct PhotoInfo *photo, void *context);

/**
 * Returns a representation of a Julian day, which is required by other functions.
 *
 * # Arguments
 *
 * * `year` - The year component of the date
 * * `month` - The month component of the date. (1 - 12)
 * * `decimal_day` - The day component of the date provided as a fraction (1.0 - 31.0)
 */
JulianDay julian_day_from_date(short year,
                               unsigned char month,
                               double decimal_day);

/**
 * Returns the heliocentric coordinates of a provide planet on a provided day
 *
 * # Arguments
 *
 * * `planet` - The planet to determine coordinates for
 * * `date` - The Julian day used to determine coordinates
 */
struct Coordinates heliocentric_coordinates(enum Planet planet, JulianDay day);

/**
 * Fetch the NASA Astronomy photo of the day and call the provided function once the
 * request has completed.
 *
 * # Arguments
 *
 * * `nasa_api_key` - The NASA API key to use when fetching the photo of the day
 * * `callback` - A pointer to the function that will be called when the request completes
 * * `context` - A pointer to application-defined context data. This data will be passed
 * to the provided callback function along with the photo info.
 */
void fetch_photo_of_the_day(const char *nasa_api_key,
                            PhotoCallback callback,
                            void *context);
